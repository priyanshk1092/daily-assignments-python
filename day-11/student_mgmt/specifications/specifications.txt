🎓 Problem Statement: Student Management CLI Application [90]
--------------------------------------------------------------------------------------

Objective:
------------------------
Develop a Python CLI-based Student Management System using OOP concepts. 

The system will allow users to:

    - Add new students
    - View all students
    - Search student by ID
    - Delete a student
    - Persist data to a file

💡 Requirements:
------------------------

Each student should have a unique ID, name, age, and grade.
CLI should allow users to:
    Add student
    View all students
    Search by ID
    Delete student
    Exit
Use OOP principles like encapsulation and modularization.
Persist the data using a JSON file.
Include a test suite using the unittest module.
Organize code into multiple files.

📁 Folder Structure
------------------------

student_mgmt/
│
├── main.py                    # CLI interface
├── student.py                 # Student class - add_student(name, age, grade)
├── student_manager.py         # Manager to handle logic
├── storage.py                 # File read/write
├── students.json              # Data storage
├── tests/
│   ├── __init__.py
│   ├── test_student.py
│   ├── test_student_manager.py
│   └── test_storage.py


📋 Feature List
------------------------

Add student
View all students
Search student by ID
Delete student
Persist and reload data from JSON


TASKS:
------------------------

1. Implement the application in python as per the above specifications
2. Identify the features and give a short description for test plan of each feature
    Specify -> what conditions you want to test
    Example -> Adding a student should test two conditions:
                Is it added with in the student list
                Is the list incremented by 1
3. Create a test suite consisting of tests for all the python modules created