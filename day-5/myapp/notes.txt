__init__.py

The package folder contains a special file called __init__.py, which stores the package's content. It serves two purposes:

The Python interpreter recognizes a folder as the package if it contains __init__.py file.
__init__.py exposes specified resources from its modules to be imported.


An empty __init__.py file makes all functions from above modules available when this package is imported.
Note that __init__.py is essential for the folder to be recognized by Python as a package.
You can optionally define functions from individual modules to be made available.
The __init__.py file is normally kept empty.
However, it can also be used to choose specific functions from modules in the package folder
and make them available for import. Modify __init__.py as below:



# -------------------- INSTALLING GLOBALLY

To install the package globally use setuptools as shown in setup.py

# -------------------- collecting all the requirements for dependency management

pip freeze > requirements.txt

# -------------------- installing requirements.txt for configuring the environment

pip install -r requirements.txt


# -------------------- installing virtual environments

pip install virtualenv 

virtualenv myenv or python -m venv testenv
.\myenv\Scripts\activate


promt changes to ----> (myenv) PS C:\Users\Purushotham\Desktop\oracle_july>

cd myapp
pip install .

----> Successfully installed mypackage-0.1

Python
import mypackage
mypackage.average(10, 20)

-------> access functions of mypackage

deactivate
